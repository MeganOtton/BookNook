# Generated by Django 4.2.19 on 2025-03-22 15:31

import cloudinary.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookStorePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booktitle', models.CharField(max_length=200, unique=True, verbose_name='Book Title')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='SYSTEM, DO NOT EDIT')),
                ('authorname', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Author Name')),
                ('age_restriction', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Age Restriction (18+)')),
                ('chapter', models.IntegerField(default=0, verbose_name='Amount Of Chapters')),
                ('bookcover', cloudinary.models.CloudinaryField(default='placeholder', max_length=255, verbose_name='image')),
                ('bookdescription', models.TextField(verbose_name='Book Description')),
                ('bookprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Book Price')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Published')], default=0)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('rating', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Book Rating')),
                ('body', models.TextField()),
                ('approved', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commenter', to=settings.AUTH_USER_MODEL)),
                ('bookstorepage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Store.bookstorepage')),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.AddField(
            model_name='bookstorepage',
            name='genre',
            field=models.ManyToManyField(blank=True, related_name='books', to='Store.genre', verbose_name='Genre'),
        ),
        migrations.AddField(
            model_name='bookstorepage',
            name='topics',
            field=models.ManyToManyField(blank=True, related_name='books', to='Store.topic', verbose_name='Topics'),
        ),
    ]
